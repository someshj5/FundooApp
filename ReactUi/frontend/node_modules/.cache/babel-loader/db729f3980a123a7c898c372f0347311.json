{"ast":null,"code":"var _jsxFileName = \"/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/ReminderComponent.js\";\nimport React, { Component } from 'react';\nimport { Menu, MenuItem } from '@material-ui/core';\nimport reminderIcon from \"../svg_icons/reminder.svg\";\nimport NoteService from '../services/NoteService';\nvar ReminderUpdate = new NoteService().updateANote;\nvar getANote = new NoteService().getANote;\nexport default class ReminderComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatedNoteRender = e => {\n      getANote(this.state.id).then(res => {\n        this.setState({\n          note: res.data.data\n        });\n        console.log(\"Getting a note\", res.data);\n      }).catch(error => {\n        console.log(\"error in getting a note\", error.response.data);\n      });\n    };\n\n    this.handleMenu = e => {\n      this.setState({\n        menuOpen: true,\n        anchorEl: e.target\n      });\n    };\n\n    this.handleClose = e => {\n      this.setState({\n        menuOpen: false,\n        anchorEl: this.state.anchorEl\n      });\n    };\n\n    this.reminderDate = event => {\n      event.persist();\n      var today = new Date();\n      var date = today.getDate();\n      today.setHours(8, 0);\n\n      if (event.target.id === \"today\") {\n        today.setDate(date);\n      }\n\n      if (event.target.id === \"tomorrow\") {\n        today.setDate(date + 1);\n      }\n\n      if (event.target.id === \"nextWeek\") {\n        today.setDate(date + 7);\n      }\n\n      if (this.state.id) {\n        let UpdateData = {\n          \"reminder\": today.toJSON(),\n          \"label\": this.state.label,\n          \"collaborator\": this.state.collaborator\n        };\n        var reminderData = today.toJSON();\n        ReminderUpdate(UpdateData, this.state.id).then(res => {\n          this.props.noteGetFunc();\n          this.props.reminderChange(reminderData);\n          this.updatedNoteRender();\n          this.setState({\n            menuOpen: false\n          });\n          console.log(\"reminder id\", event.target.id);\n          console.log(\"remiderData\", reminderData);\n          console.log(\" after update\", res.data);\n        }).catch(error => {\n          console.log(\"error data\", error.response);\n        });\n      }\n    };\n\n    this.state = {\n      id: props.id,\n      label: props.label,\n      collaborator: props.collaborator,\n      menuOpen: false,\n      anchorEl: null,\n      note: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: reminderIcon,\n      alt: \"reminderIcon\",\n      \"aria-controls\": \"menu-appbar\" // aria-haspopup=\"true\"\n      ,\n      onClick: this.handleMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      style: {\n        width: 900\n      },\n      id: \"menu-appbar\",\n      anchorEl: this.state.anchorEl,\n      open: this.state.menuOpen,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Reminder:\"), React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"today\",\n      onClick: this.reminderDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Later today:    8:00 PM\")), React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"tomorrow\",\n      onClick: this.reminderDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Tomorrow   :    8:00 PM\")), React.createElement(MenuItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"nextWeek\",\n      onClick: this.reminderDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Next week  :    8:00 PM \"))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/ReminderComponent.js"],"names":["React","Component","Menu","MenuItem","NoteService","ReminderUpdate","updateANote","getANote","ReminderComponent","constructor","props","updatedNoteRender","e","state","id","then","res","setState","note","data","console","log","catch","error","response","handleMenu","menuOpen","anchorEl","target","handleClose","reminderDate","event","persist","today","Date","date","getDate","setHours","setDate","UpdateData","toJSON","label","collaborator","reminderData","noteGetFunc","reminderChange","render","reminderIcon","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Menu, MenuItem } from '@material-ui/core';\nimport reminderIcon from '../svg_icons/reminder.svg'\nimport NoteService from '../services/NoteService';\n\n\n\nvar ReminderUpdate = new NoteService().updateANote\nvar getANote = new NoteService().getANote\n\nexport default class ReminderComponent extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            id: props.id,\n            label: props.label,\n            collaborator: props.collaborator,\n\n            menuOpen:false,\n            anchorEl:null,\n            note:[],\n\n        }\n    }\n\n\n    updatedNoteRender=(e)=>{\n        getANote(this.state.id)\n        .then(res=>{\n            this.setState({\n                note:res.data.data\n            })\n            console.log(\"Getting a note\", res.data)\n        })\n        .catch(error=>{\n            console.log(\"error in getting a note\", error.response.data)\n\n        })\n\n    \n    }\n\n    handleMenu=(e)=>{\n        this.setState({\n            menuOpen:true,\n            anchorEl:e.target\n        })\n    }\n\n    handleClose = e =>{\n        this.setState({\n            menuOpen: false,\n            anchorEl: this.state.anchorEl\n        })\n    }\n\n\n\n    reminderDate=(event)=>{\n        event.persist();\n        var today = new Date()\n        var date = today.getDate()\n        today.setHours(8,0)\n\n        if (event.target.id === \"today\"){\n            today.setDate(date)\n        }\n        if (event.target.id === \"tomorrow\"){\n            today.setDate(date + 1 )\n        }\n\n        if (event.target.id === \"nextWeek\"){\n            today.setDate(date + 7)\n\n        }\n\n\n        if (this.state.id){\n            let UpdateData ={\n                \"reminder\":today.toJSON(),\n                \"label\":this.state.label,\n                \"collaborator\": this.state.collaborator\n    \n            \n            }\n    \n            var reminderData = today.toJSON()\n    \n            ReminderUpdate(UpdateData, this.state.id )\n            .then(res=>{\n                this.props.noteGetFunc()\n                this.props.reminderChange(reminderData)\n                this.updatedNoteRender()\n                this.setState({menuOpen:false})\n                console.log(\"reminder id\", event.target.id)\n                console.log(\"remiderData\", reminderData)\n                console.log(\" after update\", res.data);\n    \n            })\n            .catch(error=>{\n                console.log(\"error data\", error.response)\n            })\n\n        }\n        \n\n       \n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <img src={reminderIcon} alt=\"reminderIcon\"\n                aria-controls=\"menu-appbar\"\n                // aria-haspopup=\"true\"\n                onClick={this.handleMenu}\n                />\n\n                <Menu\n                style={{width:900}}\n                id=\"menu-appbar\"\n                anchorEl={this.state.anchorEl}\n                open={this.state.menuOpen}\n                onClose={this.handleClose}>\n                    <MenuItem>Reminder:</MenuItem>\n                    <MenuItem><p id=\"today\" onClick={this.reminderDate}>Later today:    8:00 PM</p></MenuItem>\n                    <MenuItem><p id=\"tomorrow\" onClick={this.reminderDate}>Tomorrow   :    8:00 PM</p></MenuItem>\n                    <MenuItem><p id=\"nextWeek\" onClick={this.reminderDate}>Next week  :    8:00 PM </p></MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}