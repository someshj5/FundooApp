{"ast":null,"code":"var _jsxFileName = \"/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/DialogLabelEdit.js\";\nimport React, { Component } from 'react';\nimport { InputBase, ListItemText, ListItemIcon, ListItem } from '@material-ui/core';\nimport NoteService from '../services/NoteService';\nimport Delete from '@material-ui/icons/Delete';\nimport Label from '@material-ui/icons/Label';\nimport Edit from '@material-ui/icons/Edit';\nimport Done from '@material-ui/icons/Done';\nconst LabelDelete = new NoteService().deleteLabel;\nconst LabelEdit = new NoteService().editLabel;\nexport default class DialogLabelEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMouse = () => {\n      this.setState({\n        isHover: true\n      });\n    };\n\n    this.handleMouseLeave = () => {\n      this.setState({\n        isHover: false\n      });\n    };\n\n    this.deleteLabel = () => {\n      LabelDelete(this.state.labelId).then(res => {\n        this.props.LabelsGet();\n        console.log(\"delete response\", res.data);\n      }).catch(error => {\n        console.log(\"error in delete\", error.response.data);\n      });\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"===>\", this.state.labelname);\n    };\n\n    this.handleLblEdit = () => {\n      this.setState({\n        renameLabel: true\n      });\n    };\n\n    this.handleEditLabel = event => {\n      let updateData = {\n        \"name\": this.state.labelname\n      };\n      LabelEdit(updateData, this.props.label.id).then(res => {\n        console.log(\"after label renamed\", res.data);\n      }).catch(error => {\n        console.log(\"error edit label\", error.response);\n      });\n    };\n\n    this.state = {\n      labelname: props.label.name,\n      labelId: props.label.id,\n      isHover: false,\n      renameLabel: false\n    };\n  }\n\n  render() {\n    return React.createElement(ListItem, {\n      onMouseEnter: this.handleMouse,\n      onMouseLeave: this.handleMouseLeave,\n      className: \"DialogNote\",\n      id: \"DialogNote\",\n      key: this.props.label.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.isHover ? React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Delete, {\n      onClick: this.deleteLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })) : React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"DgEditLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.renameLabel ? React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      className: \"InputDgLbl\",\n      name: \"labelname\",\n      defaultValue: this.state.labelname,\n      onChange: this.handleOnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(ListItemIcon, {\n      className: \"DgEdit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Done, {\n      onClick: this.handleEditLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))) : React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.props.label.name), React.createElement(ListItemIcon, {\n      className: \"DgEdit\",\n      onClick: this.handleLblEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Edit, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/DialogLabelEdit.js"],"names":["React","Component","InputBase","ListItemText","ListItemIcon","ListItem","NoteService","Delete","Label","Edit","Done","LabelDelete","deleteLabel","LabelEdit","editLabel","DialogLabelEdit","constructor","props","handleMouse","setState","isHover","handleMouseLeave","state","labelId","then","res","LabelsGet","console","log","data","catch","error","response","handleOnChange","event","target","name","value","labelname","handleLblEdit","renameLabel","handleEditLabel","updateData","label","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { InputBase, ListItemText, ListItemIcon, ListItem } from '@material-ui/core';\nimport NoteService from '../services/NoteService';\nimport Delete from '@material-ui/icons/Delete'\nimport Label from '@material-ui/icons/Label'\nimport Edit from '@material-ui/icons/Edit'\nimport Done from '@material-ui/icons/Done'\n\n\n\n\n\n\n\nconst LabelDelete = new NoteService().deleteLabel\nconst LabelEdit = new NoteService().editLabel\n\nexport default class DialogLabelEdit extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            labelname:props.label.name,\n            labelId:props.label.id,\n            isHover:false,\n            renameLabel:false,\n\n\n        }\n    }\n\n\n\n\n    handleMouse=()=>{\n        this.setState({\n            isHover:true\n        })\n    }\n\n    handleMouseLeave=()=>{\n        this.setState({\n            isHover:false\n        })\n    }\n\n\n    deleteLabel=()=>{\n\n        LabelDelete(this.state.labelId)\n        .then(res=>{\n            this.props.LabelsGet()\n            console.log(\"delete response\", res.data)\n        })\n        .catch(error=>{\n            console.log(\"error in delete\", error.response.data)\n        })\n    }\n\n\n    handleOnChange=(event)=>{\n        this.setState({\n            [event.target.name]:event.target.value\n        })\n        console.log(\"===>\", this.state.labelname)\n    }\n\n\n    handleLblEdit=()=>{\n        this.setState({\n            renameLabel:true\n        })\n    }\n\n\n    handleEditLabel=(event)=>{\n        let updateData={\n            \"name\": this.state.labelname\n        }\n\n        LabelEdit(updateData,this.props.label.id)\n        .then(res=>{\n            console.log(\"after label renamed\", res.data)\n        })\n\n        .catch(error=>{\n            console.log(\"error edit label\", error.response)\n        })\n\n\n    }\n\n    render() {\n        return (\n            <ListItem onMouseEnter={this.handleMouse}\n             onMouseLeave={this.handleMouseLeave} \n             className=\"DialogNote\" id=\"DialogNote\" key={this.props.label.id}>\n                {this.state.isHover \n                    ? <ListItemIcon><Delete onClick={this.deleteLabel}/></ListItemIcon>\n                    : <ListItemIcon><Label/></ListItemIcon>\n                }\n\n                <div className=\"DgEditLabel\" >\n\n                    {this.state.renameLabel ?<ListItem>\n                                                <ListItemText>\n                                                    <InputBase\n                                                    className=\"InputDgLbl\"\n                                                    name=\"labelname\"\n                                                    defaultValue={this.state.labelname}\n                                                    onChange={this.handleOnChange}\n                                                    \n                                                    />\n                                                </ListItemText>\n                                                <ListItemIcon className=\"DgEdit\">\n                                                    <Done onClick={this.handleEditLabel}/>\n                                                </ListItemIcon>\n                                            </ListItem> \n                                               \n                                                \n                        :<ListItem><ListItemText>{this.props.label.name}</ListItemText>\n                        <ListItemIcon className=\"DgEdit\" onClick={this.handleLblEdit}><Edit/></ListItemIcon>\n                        </ListItem>\n                    \n                    }\n                   \n                </div>\n            </ListItem>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}