{"ast":null,"code":"var _jsxFileName = \"/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/LeftDrawer.js\";\nimport React, { Component } from 'react';\nimport { Drawer, Divider, Dialog, DialogContent, DialogTitle, InputBase, DialogActions } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport note from \"../svg_icons/note.svg\";\nimport labeledt from \"../svg_icons/label_edit.svg\";\nimport reminder from \"../svg_icons/reminder_menu.svg\";\nimport archive from \"../svg_icons/archive_menu.svg\";\nimport labelIcon from \"../svg_icons/label.svg\";\nimport AddIcon from '@material-ui/icons/Add';\nimport trash from \"../svg_icons/trash.svg\";\nimport \"../App.css\";\nimport NoteService from '../services/NoteService';\nconst DrawerLabelGet = new NoteService().getLabels;\nconst LabelCreate = new NoteService().createLabel;\nconst myDrawerTheme = createMuiTheme({\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        top: 65\n      }\n    }\n  }\n});\nexport class LeftDrawer extends Component {\n  constructor() {\n    super();\n\n    this.handleArchive = event => {\n      this.props.ArchiveGet();\n    };\n\n    this.handleClick = event => {\n      this.props.TrashGet();\n    };\n\n    this.handleNotes = event => {\n      this.props.noteGetFunc();\n    };\n\n    this.handleReminder = events => {\n      this.props.ReminderGet();\n    };\n\n    this.DrawerLabels = () => {\n      DrawerLabelGet().then(res => {\n        this.setState({\n          labels: res.data\n        });\n      }).catch(error => {\n        console.log(\"label error\", error.response.data);\n      });\n    };\n\n    this.handleDialogOpen = () => {\n      this.setState({\n        Dopen: true\n      });\n    };\n\n    this.handleOnchange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(\"===>\", this.state);\n    };\n\n    this.CreateLabel = () => {\n      let Labeldata = {\n        \"name\": this.state.label,\n        \"user\": sessionStorage.getItem(\"userid\")\n      };\n      LabelCreate(Labeldata).then(res => {\n        this.LabelsGet();\n        console.log(\"Label created\", res.data);\n      }).catch(error => {\n        console.log(\"error label\", error.response.data);\n      });\n    };\n\n    this.handleLblEdit = () => {};\n\n    this.state = {\n      labels: [],\n      Dopen: false\n    };\n  }\n\n  componentDidMount() {\n    this.DrawerLabels();\n    this.setState({\n      labels: this.props.labels\n    });\n  }\n\n  render() {\n    const DrawerLabel = this.state.labels.map(label => {\n      return React.createElement(\"div\", {\n        className: \"DrawerNote\",\n        key: label.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: labelIcon,\n        alt: \"labelsvg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, label.name));\n    });\n    const DialogLabel = this.state.labels.map(label => {\n      return React.createElement(\"div\", {\n        className: \"DialogNote\",\n        key: label.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: labelIcon,\n        alt: \"labelsvg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, label.name), React.createElement(\"div\", {\n        className: \"DgEditLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        onClick: this.handleLblEdit,\n        src: labeledt,\n        alt: \"labelsvg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n    });\n    return React.createElement(ThemeProvider, {\n      theme: myDrawerTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.props.open,\n      anchor: \"left\",\n      variant: \"persistent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"notes\",\n      onClick: this.handleNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: note,\n      alt: \"notesvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Notes\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"reminders\",\n      onClick: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: reminder,\n      alt: \"remindersvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Reminders\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"labelhead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"LABELS\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, DrawerLabel), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: labeledt,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      onClick: this.handleDialogOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Edit labels\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"archives\",\n      onClick: this.handleArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: archive,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Archive\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"trash\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: trash,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Trash\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.state.Dopen,\n      PaperProps: {\n        style: {\n          background: this.state.color,\n          width: \"20%\",\n          height: \"auto\"\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      name: \"label\",\n      onChange: this.handleOnChange,\n      placeholder: \"create new label\",\n      style: {\n        width: \"85%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      onClick: this.CreateLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, DialogLabel), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }))));\n  }\n\n}\nexport default LeftDrawer;","map":{"version":3,"sources":["/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/LeftDrawer.js"],"names":["React","Component","Drawer","Divider","Dialog","DialogContent","DialogTitle","InputBase","DialogActions","ThemeProvider","createMuiTheme","AddIcon","NoteService","DrawerLabelGet","getLabels","LabelCreate","createLabel","myDrawerTheme","overrides","MuiDrawer","paper","top","LeftDrawer","constructor","handleArchive","event","props","ArchiveGet","handleClick","TrashGet","handleNotes","noteGetFunc","handleReminder","events","ReminderGet","DrawerLabels","then","res","setState","labels","data","catch","error","console","log","response","handleDialogOpen","Dopen","handleOnchange","target","name","value","state","CreateLabel","Labeldata","label","sessionStorage","getItem","LabelsGet","handleLblEdit","componentDidMount","render","DrawerLabel","map","id","labelIcon","DialogLabel","labeledt","open","note","reminder","archive","trash","style","background","color","width","height","handleOnChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Drawer, Divider, Dialog, DialogContent, DialogTitle, InputBase, DialogActions } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport note from '../svg_icons/note.svg'\nimport labeledt from '../svg_icons/label_edit.svg'\nimport reminder from '../svg_icons/reminder_menu.svg'\nimport archive from '../svg_icons/archive_menu.svg'\nimport labelIcon from '../svg_icons/label.svg'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport trash from '../svg_icons/trash.svg'\nimport \"../App.css\"\nimport NoteService from '../services/NoteService';\n\n\nconst DrawerLabelGet = new NoteService().getLabels\nconst LabelCreate = new NoteService().createLabel\n\n\n\nconst myDrawerTheme = createMuiTheme({\n    overrides:{\n        MuiDrawer:{\n            paper:{\n                top:65\n            }\n\n        }\n    }\n})\n\n\nexport class LeftDrawer extends Component {\n    constructor(){\n        super();\n        this.state={\n            \n            labels:[],\n            Dopen:false\n\n        }\n    }\n\n    componentDidMount(){\n        this.DrawerLabels()\n        this.setState({\n            labels:this.props.labels\n        })\n        \n\n    }\n\n\n\n\n    handleArchive=(event)=>{\n        this.props.ArchiveGet()\n    }\n\n    handleClick=(event)=>{\n        this.props.TrashGet()\n    }\n\n    handleNotes=(event)=>{\n        this.props.noteGetFunc()\n    }\n\n    handleReminder=(events)=>{\n        this.props.ReminderGet()\n    }\n\n    DrawerLabels=()=>{\n        DrawerLabelGet()\n        .then(res=>{\n            this.setState({\n                labels:res.data\n            })\n\n        })\n        .catch(error=>{\n            console.log(\"label error\", error.response.data)\n        })\n    }\n\n    handleDialogOpen=()=>{\n        this.setState({\n            Dopen:true\n        })\n    }\n\n    handleOnchange=(event)=>{\n        this.setState({\n            [event.target.name] :event.target.value\n        })\n        console.log(\"===>\", this.state)\n    }\n\n\n    CreateLabel=()=>{\n        let Labeldata={\n            \"name\": this.state.label,\n            \"user\":sessionStorage.getItem(\"userid\")\n        }\n        LabelCreate(Labeldata)\n        .then(res=>{\n            \n            this.LabelsGet()\n            console.log(\"Label created\", res.data)\n        })\n        .catch(error=>{\n            console.log(\"error label\", error.response.data)\n        })\n    }\n\n    handleLblEdit=()=>{\n\n\n    }\n\n\n\n    render() {\n\n        const DrawerLabel = this.state.labels.map((label)=>{\n            return <div  className = \"DrawerNote\" key={label.id}><img src={labelIcon} alt=\"labelsvg\"/><p>{label.name}</p></div>\n\n        })\n\n        const DialogLabel = this.state.labels.map((label)=>{\n            return <div className = \"DialogNote\" key={label.id}><img src={labelIcon} alt=\"labelsvg\"/><p>{label.name}</p><div className=\"DgEditLabel\" ><img onClick={this.handleLblEdit}  src={labeledt} alt=\"labelsvg\"/></div></div>\n        })\n\n\n\n        return (\n            \n                <ThemeProvider theme={myDrawerTheme}>            \n            <div>\n                {/* <Button onClick={this.leftDfun}>Open Left</Button> */}\n                <Drawer \n                    open={this.props.open}\n                    anchor=\"left\"\n                    variant=\"persistent\"\n                    >\n                    <div className = \"DrawerNote\" id=\"notes\"  onClick={this.handleNotes}>\n                        <img src={note} alt=\"notesvg\"/>\n                        <p>Notes</p>\n                    </div >\n                    <Divider />\n\n\n                    <div className = \"DrawerNote\" id=\"reminders\" onClick={this.handleReminder}>\n                        <img src={reminder} alt=\"remindersvg\"/>\n                        <p >Reminders</p>\n                    </div>\n\n                    <Divider />\n\n                    <div>\n                    <p className=\"labelhead\">LABELS</p>\n                    </div>\n\n                    <div >\n                        {DrawerLabel}\n                    </div>\n\n                    <div className = \"DrawerNote\">\n                    <img src={labeledt} alt=\"labelsvg\"/>\n                        <p onClick={this.handleDialogOpen}>Edit labels</p>\n                    </div>\n\n                    <Divider />\n\n                    <div className=\"DrawerNote\" id =\"archives\"  onClick={this.handleArchive} >\n                    <img src={archive} alt=\"labelsvg\"/>\n\n                        <p>Archive</p>\n                    </div>\n\n                    <Divider />\n                    \n                    <div className=\"DrawerNote\" id =\"trash\"  onClick={this.handleClick}>\n                    <img src={trash} alt=\"labelsvg\"/>\n\n                        <p>Trash</p>\n                    </div>\n\n                </Drawer>\n\n                \n            </div>\n            <div>\n            <Dialog\n                open={this.state.Dopen}\n                PaperProps={{\n                    style: {\n                        background: this.state.color,\n                        width: \"20%\",\n                        height: \"auto\"\n                    }\n                }}>\n                    <DialogTitle>\n                    <div>\n                    <InputBase\n                            name=\"label\"\n                            onChange={this.handleOnChange} \n                            placeholder=\"create new label\"\n                            style={{width:\"85%\"}}\n                        />\n                        <span ><AddIcon onClick={this.CreateLabel}/></span>\n                    </div>\n                    </DialogTitle>\n                    <DialogContent>\n                        \n                    {DialogLabel}\n                    </DialogContent>\n                    <DialogActions>\n                        \n                    </DialogActions>\n\n                 </Dialog>\n            </div>\n          \n             </ThemeProvider>\n            \n\n\n        )\n    }\n}\n\nexport default LeftDrawer\n"]},"metadata":{},"sourceType":"module"}