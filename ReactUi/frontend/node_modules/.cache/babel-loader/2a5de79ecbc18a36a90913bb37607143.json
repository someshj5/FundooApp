{"ast":null,"code":"var _jsxFileName = \"/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/LeftDrawer.js\";\nimport React, { Component } from 'react';\nimport { Drawer, Divider } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport note from \"../svg_icons/note.svg\";\nimport labeledt from \"../svg_icons/label_edit.svg\";\nimport reminder from \"../svg_icons/reminder_menu.svg\";\nimport archive from \"../svg_icons/archive_menu.svg\";\nimport labelIcon from \"../svg_icons/label.svg\";\nimport trash from \"../svg_icons/trash.svg\";\nimport \"../App.css\";\nimport NoteService from '../services/NoteService';\nconst DrawerLabelGet = new NoteService().getLabels;\nconst myDrawerTheme = createMuiTheme({\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        top: 65\n      }\n    }\n  }\n});\nexport class LeftDrawer extends Component {\n  constructor() {\n    super();\n\n    this.handleArchive = event => {\n      this.props.ArchiveGet();\n    };\n\n    this.handleClick = event => {\n      this.props.TrashGet();\n    };\n\n    this.handleNotes = event => {\n      this.props.noteGetFunc();\n    };\n\n    this.handleReminder = events => {\n      this.props.ReminderGet();\n    };\n\n    this.DrawerLabels = () => {\n      DrawerLabelGet().then(res => {\n        this.setState({\n          labels: res.data\n        });\n      }).catch(error => {\n        console.log(\"label error\", error.response.data);\n      });\n    };\n\n    this.state = {\n      labels: []\n    };\n  }\n\n  componentDidMount() {\n    this.DrawerLabels();\n  }\n\n  render() {\n    const DrawerLabel = this.state.labels.map(label => {\n      return React.createElement(\"div\", {\n        className: \"DrawerNote\",\n        key: label.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: labelIcon,\n        alt: \"labelsvg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, label.name));\n    });\n    return React.createElement(ThemeProvider, {\n      theme: myDrawerTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Drawer, {\n      open: this.props.open,\n      anchor: \"left\",\n      variant: \"persistent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"notes\",\n      onClick: this.handleNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: note,\n      alt: \"notesvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Notes\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"reminders\",\n      onClick: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: reminder,\n      alt: \"remindersvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reminders\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"labelhead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"LABELS\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, DrawerLabel), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: labeledt,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Edit labels\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"archives\",\n      onClick: this.handleArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: archive,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Archive\")), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"DrawerNote\",\n      id: \"trash\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: trash,\n      alt: \"labelsvg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Trash\")))));\n  }\n\n}\nexport default LeftDrawer;","map":{"version":3,"sources":["/home/admin1/someshfundoo/FundooApp/ReactUi/frontend/src/components/LeftDrawer.js"],"names":["React","Component","Drawer","Divider","ThemeProvider","createMuiTheme","NoteService","DrawerLabelGet","getLabels","myDrawerTheme","overrides","MuiDrawer","paper","top","LeftDrawer","constructor","handleArchive","event","props","ArchiveGet","handleClick","TrashGet","handleNotes","noteGetFunc","handleReminder","events","ReminderGet","DrawerLabels","then","res","setState","labels","data","catch","error","console","log","response","state","componentDidMount","render","DrawerLabel","map","label","id","labelIcon","name","open","note","reminder","labeledt","archive","trash"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Drawer, Divider } from '@material-ui/core'\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport note from '../svg_icons/note.svg'\nimport labeledt from '../svg_icons/label_edit.svg'\nimport reminder from '../svg_icons/reminder_menu.svg'\nimport archive from '../svg_icons/archive_menu.svg'\nimport labelIcon from '../svg_icons/label.svg'\n\nimport trash from '../svg_icons/trash.svg'\nimport \"../App.css\"\nimport NoteService from '../services/NoteService';\n\n\nconst DrawerLabelGet = new NoteService().getLabels\n\n\nconst myDrawerTheme = createMuiTheme({\n    overrides:{\n        MuiDrawer:{\n            paper:{\n                top:65\n            }\n\n        }\n    }\n})\n\n\nexport class LeftDrawer extends Component {\n    constructor(){\n        super();\n        this.state={\n            labels:[]\n\n        }\n    }\n\n    componentDidMount(){\n        this.DrawerLabels()\n        \n\n    }\n\n\n\n\n    handleArchive=(event)=>{\n        this.props.ArchiveGet()\n    }\n\n    handleClick=(event)=>{\n        this.props.TrashGet()\n    }\n\n    handleNotes=(event)=>{\n        this.props.noteGetFunc()\n    }\n\n    handleReminder=(events)=>{\n        this.props.ReminderGet()\n    }\n\n    DrawerLabels=()=>{\n        DrawerLabelGet()\n        .then(res=>{\n            this.setState({\n                labels:res.data\n            })\n\n        })\n        .catch(error=>{\n            console.log(\"label error\", error.response.data)\n        })\n    }\n\n\n\n    render() {\n\n        const DrawerLabel = this.state.labels.map((label)=>{\n            return <div  className = \"DrawerNote\" key={label.id}><img src={labelIcon} alt=\"labelsvg\"/><p>{label.name}</p></div>\n\n        })\n\n        return (\n            \n                <ThemeProvider theme={myDrawerTheme}>            \n            <div>\n                {/* <Button onClick={this.leftDfun}>Open Left</Button> */}\n                <Drawer \n                    open={this.props.open}\n                    anchor=\"left\"\n                    variant=\"persistent\"\n                    >\n                    <div className = \"DrawerNote\" id=\"notes\"  onClick={this.handleNotes}>\n                        <img src={note} alt=\"notesvg\"/>\n                        <p>Notes</p>\n                    </div >\n                    <Divider />\n\n\n                    <div className = \"DrawerNote\" id=\"reminders\" onClick={this.handleReminder}>\n                        <img src={reminder} alt=\"remindersvg\"/>\n                        <p >Reminders</p>\n                    </div>\n\n                    <Divider />\n\n                    <div>\n                    <p className=\"labelhead\">LABELS</p>\n                    </div>\n\n                    <div >\n                        {DrawerLabel}\n                    </div>\n\n                    <div className = \"DrawerNote\">\n                    <img src={labeledt} alt=\"labelsvg\"/>\n                        <p >Edit labels</p>\n                    </div>\n\n                    <Divider />\n\n                    <div className=\"DrawerNote\" id =\"archives\"  onClick={this.handleArchive} >\n                    <img src={archive} alt=\"labelsvg\"/>\n\n                        <p>Archive</p>\n                    </div>\n\n                    <Divider />\n                    \n                    <div className=\"DrawerNote\" id =\"trash\"  onClick={this.handleClick}>\n                    <img src={trash} alt=\"labelsvg\"/>\n\n                        <p>Trash</p>\n                    </div>\n\n                </Drawer>\n            </div>\n             </ThemeProvider>\n        )\n    }\n}\n\nexport default LeftDrawer\n"]},"metadata":{},"sourceType":"module"}